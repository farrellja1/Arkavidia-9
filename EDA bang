import warnings
warnings.simplefilter(action='ignore', category=FutureWarning)
import pandas as pd
import warnings
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score, silhouette_score
from yellowbrick.cluster import KElbowVisualizer
from sklearn.cluster import KMeans, DBSCAN
from sklearn.ensemble import RandomForestClassifier
from google.colab import drive

##################

#IMPORT
file_id = '1tW91uLKcnlJEo4-lN5vDP3KA16uXeoSt'
download_url = f'https://drive.google.com/uc?id={file_id}'
data = pd.read_csv(download_url)

#LIAT DATA
data.head()
data.info()

#CEK NULL
missing_values = data.isnull().sum()
missing_values[missing_values > 0]

#CEKMISSING CEKDUPLIKAT
less = missing_values[missing_values < 1000].index
over = missing_values[missing_values >= 1000].index
duplicates = data.duplicated()
print("Baris duplikat:")
print(df[duplicates])

#PISAHIN KOLOM
numeric_features = data[less].select_dtypes(include=['number']).columns
kategorical_features = data[less].select_dtypes(include=['object']).columns
df = data.drop(columns=over)

#BOXPLOT
for feature in numeric_features: #Plot semua feature numerik dari dataset
    plt.figure(figsize=(10, 6))
    sns.boxplot(x=df[feature])
    plt.title(f'Box Plot of {feature}')
    plt.show()

# VISUALISASI KATEGORIKAL
columns_to_plot = ['Gender', 'Field_of_Study', 'Current_Job_Level', 'Work_Life_Balance', 'Entrepreneurship']

plt.figure(figsize=(30, 20))
for i, column in enumerate(columns_to_plot, 1):
    plt.subplot(2, 3, i)
    sns.histplot(df[column], kde=True, bins=30)
    plt.title(f'Distribution of {column}')

plt.tight_layout()
plt.show()

# NGELUARIN OUTLIER
# Mengidentifikasi outlier dengan IQR
Q1 = df["Starting_Salary"].quantile(0.25)
Q3 = df["Starting_Salary"].quantile(0.75)
IQR = Q3 - Q1


median_value = df["Starting_Salary"].median()
df["Starting_Salary"] = np.where(
    (df["Starting_Salary"] < (Q1 - 1.5 * IQR)) | (df["Starting_Salary"] > (Q3 + 1.5 * IQR)),
    median_value,
    df["Starting_Salary"]
)

# Hasil plot variabel Starting_Salary dengan merupah outlier dengan median
plt.figure(figsize=(10, 6))
sns.boxplot(x=df["Starting_Salary"])
plt.title(f'Box Plot of Starting_Salary (Outliers Replaced with Median)')
plt.show()

